#!/bin/sh
#layermanager: to connect the module to the layer aufs. GPL v2, DdShurick, 29.01.2017.

checkroot() {
	[ "$(id -u)" = 0 ] || msgerr "You must be root"
}

usage () {
	echo "Usage:"
	echo "	 PROGNAME [key] modulename"
	echo "keys:"
	echo "	 -d|--delete|--del - to delete the module from the layer"
	echo "	 -h|--help - this usage"
	echo "	 -i|--install - to install the module in / as the package"
	echo "	 -n - not to execute the commands depmod and ldconfig after connecting"
	echo "	 -s|--show - show all layers == showlayers"
	echo "	 -u N|--uplevel N - to connect the module to the layer N"
	exit 0
}

msgerr() {
	echo $1 
	exit 1
}

showlayers() {
	n=0
	while true; do 
		echo -n "$n " 
		cat /sys/fs/aufs/si_*/br$n 2>/dev/null || break
    	n=$(expr $n + 1)
	done
	exit 0
}

findmodule() {
	MOD=$(realpath "$1") || msgerr "No file $1"
	MODNAME=$(basename $MOD)
}

moduletype() {
	findmodule "$1"
	case $(file -b $MOD) in
		directory) MODTYPE="dir" ;;
		Squashfs*4.0*) MODTYPE="sfs" ;;
		Linux*ext*) MODTYPE="ext" ;;
		"") msgerr "$0: Missing modulename" ;;
		*) msgerr "Invalid format $MODNAME" ;;
	esac
}

modulemount() {
	checkroot
	moduletype "$1"
	if [ "$MODTYPE" = "dir" ]; then
		[ "$(df /initrd/changes | egrep '/dev/|tmpfs')" ] || msgerr "Directory in aufs, mount impossible"
		mount -o remount,$MNTCMD:$MOD/=ro /
	else
		[ "$(/sbin/losetup -f)" = "" ] && msgerr "No free loops"
		mkdir -p /$SYSMNT/bundles/$MODNAME
		mount -o loop $MOD /$SYSMNT/bundles/$MODNAME
		mount -o remount,$MNTCMD:/$SYSMNT/bundles/$MODNAME/=ro /
	fi
	exit $?
}

moduleumount() {
	checkroot
	moduletype "$1"
	if [ "$MODTYPE" = "dir" ]; then
		mount -o remount,del:$MOD/ /
	else
		mount -o remount,del:/$SYSMNT/bundles/$MODNAME/ /
		umount /$SYSMNT/bundles/$MODNAME
		rmdir /$SYSMNT/bundles/$MODNAME
	fi
	exit $?
}

moduleinstall() {
	checkroot
	moduletype "$1"
	if [ "$MODTYPE" = "dir" ]; then
		if [ ! -f $MOD/$SPECS/$MODNAME/pfs.files ]; then #if there is no list of files
			find $MOD ! -type d | sed "s|$MOD||" > /$SPECS/$MODNAME/pfs.files
		fi
		cp -a "$MOD"/* /
	else
		[ "$(/sbin/losetup -f)" = "" ] && msgerr "No free loops"
		mkdir -p /mnt/$MODNAME
		mount -o loop $MOD /mnt/$MODNAME
		if [ ! -f /mnt/$MODNAME/$SPECS/$MODNAME/pfs.files ]; then #if there is no list of files
			find /mnt/$MODNAME ! -type d | sed "s|/mnt/$MODNAME||" > /$SPECS/$MODNAME/pfs.files
		fi
		cp -a /mnt/$MODNAME/* /
		umount /mnt/$MODNAME
		rmdir /mnt/$MODNAME
	fi
	exit $?
}
#if the module was installed
moduledelete() {
	checkroot
	findmodule $1
	[ "$(grep $MODNAME /proc/mounts)" ] && moduleumount $1
	cp /$SPECS/$MODNAME/pfs.files /tmp/remove.lst 2>/dev/null || msgerr "There is no list of files to delete"
	cat /tmp/remove.lst | while read F; do rm $F; done
	exit $?
}

[ $1 ] || usage
SPECS="etc/packages/mount"
MNTCMD=append 
[ "$(readlink /sbin/losetup)" = '../bin/busybox' ] && FREELOOP=$(/sbin/losetup -f | tr -d [a-z/]) || FREELOOP=$(/sbin/losetup -a | tail -n1 | cut -b 10-11)
#FREELOOP=$(/sbin/losetup -f | cut -b10-)

O=$(getopt -l delete,del,debug,help,install,show,verbose,uplevel: -- Ddhinsvu: $@) || usage
eval set -- "$O"
for OPT in $O
do
	case "$OPT" in
	-d|--delete|--del) [ "$ACT" = "ins" ] && msgerr "Please select one to install (-i) or delete (-d)"
		ACT=del; shift;;
	-h|--help) usage; break;;
	-i|--install) [ "$ACT" = "del" ] && msgerr "Please select one to install (-i) or delete (-d)"
		ACT=ins; shift;;
	-n) LD=no; shift;;
	-s|--show) showlayers; break;;
	-u|--uplevel)
		if [ "$FREELOOP" -gt "$2" ] 2>/dev/null; then
	 		MNTCMD=add:$2; shift 2
	 	else
	 		msgerr "Incorrect or missing -u|--uplevel key value" 
	 	shift; fi;;
	--)	shift; break;;
	esac
done

[ "$ACT" = "ins" ] && MNTCMD=""
[ "$SYSMNT" ] || SYSMNT=$(cut -f2 -d/ /sys/fs/aufs/si_*/br0)

PROGNAME=`basename $0`
[ "$PROGNAME" = "layermanager" ] || $PROGNAME "$1"

[ "$ACT" = "del" ] && moduledelete $1
[ "$ACT" = "ins" ] && moduleinstall $1
[ "$MNTCMD" ] && modulemount $1

echo ""
echo "Отчёт:"
[ "$MNTCMD" ] && echo "Подключен $MODNAME точка монтирования /$SYSMNT/bundles/$MODNAME"
[ "$ACT" = "ins" ] && echo "Установлен $MODNAME"
[ "$LD" ] && echo "depmod and ldconfig $LD"
